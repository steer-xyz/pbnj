# üîß Technical Documentation

## File Metadata

| **Property** | **Value** |
|--------------|-----------|
| **File Name** | {{ metadata.file_info.name }} |
| **File Path** | {{ metadata.file_info.path }} |
| **File Size** | {{ (metadata.file_info.size_bytes / (1024 * 1024))|round(2) }} MB ({{ metadata.file_info.size_bytes }} bytes) |
| **Analysis Timestamp** | Generated by PBNJ |

## üìä Data Model Architecture

### Component Overview

| **Component** | **Count** | **Details** |
|---------------|-----------|-------------|
| **Tables** | {{ metadata.tables|length }} | {% if metadata.tables|length > 0 %}{{ metadata.tables|selectattr("hidden", "equalto", false)|list|length }} visible, {{ metadata.tables|selectattr("hidden", "equalto", true)|list|length }} hidden{% else %}No tables found{% endif %} |
| **Calculated Columns** | {{ metadata.calculated_columns|length }} | Custom DAX column definitions |
| **Measures** | {{ metadata.measures|length }} | Business logic calculations |
| **Relationships** | {{ metadata.relationships|length }} | {% if metadata.relationships|length > 0 %}Table connections and cardinalities{% else %}No relationships defined{% endif %} |
| **Power Query Queries** | {{ metadata.power_query.queries|length }} | ETL transformations |

### Schema Analysis

{% if metadata.tables %}
#### Table Structure Summary

| **Table Name** | **Columns** | **Type** | **Status** |
|----------------|-------------|----------|------------|
{% for table in metadata.tables %}
| `{{ table.name }}` | {{ table.columns|length }} | {{ table.type }} | {% if table.hidden %}Hidden{% else %}Visible{% endif %} |
{% endfor %}

#### Column Data Types Distribution

{% set all_columns = [] %}
{% for table in metadata.tables %}
  {% for column in table.columns %}
    {% set _ = all_columns.append(column.data_type) %}
  {% endfor %}
{% endfor %}

{% set type_counts = {} %}
{% for data_type in all_columns %}
  {% if data_type in type_counts %}
    {% set _ = type_counts.update({data_type: type_counts[data_type] + 1}) %}
  {% else %}
    {% set _ = type_counts.update({data_type: 1}) %}
  {% endif %}
{% endfor %}

{% for data_type, count in type_counts.items() %}
- **{{ data_type }}**: {{ count }} column{{ "s" if count != 1 else "" }}
{% endfor %}
{% endif %}

## üîó Relationship Model

{% if metadata.relationships %}
### Relationship Configuration

| **From** | **To** | **Cardinality** | **Filter Direction** | **Active** |
|----------|--------|-----------------|---------------------|------------|
{% for rel in metadata.relationships %}
| `{{ rel.from_table }}.{{ rel.from_column }}` | `{{ rel.to_table }}.{{ rel.to_column }}` | {{ rel.cardinality }} | {{ rel.cross_filter_direction }} | {% if rel.is_active %}‚úÖ{% else %}‚ùå{% endif %} |
{% endfor %}

### Relationship Health Check

{% set active_rels = metadata.relationships|selectattr("is_active", "equalto", 1)|list %}
{% set inactive_rels = metadata.relationships|selectattr("is_active", "equalto", 0)|list %}

- **Active Relationships**: {{ active_rels|length }}
- **Inactive Relationships**: {{ inactive_rels|length }}
{% if inactive_rels|length > 0 %}
- ‚ö†Ô∏è **Warning**: {{ inactive_rels|length }} inactive relationship(s) detected - review for optimization opportunities
{% endif %}

{% else %}
### No Relationships Defined

‚ö†Ô∏è This model has no explicit relationships between tables. This may indicate:
- Single table model
- Relationships defined via DAX instead of model
- Potential data model design issue
{% endif %}

## üßÆ DAX Analysis

{% if metadata.measures %}
### Measure Complexity Analysis

{% set simple_measures = [] %}
{% set complex_measures = [] %}

{% for measure in metadata.measures %}
  {% if measure.expression and ("CALCULATE" in measure.expression or "SUMX" in measure.expression or "FILTER" in measure.expression) %}
    {% set _ = complex_measures.append(measure) %}
  {% else %}
    {% set _ = simple_measures.append(measure) %}
  {% endif %}
{% endfor %}

| **Complexity Level** | **Count** | **Percentage** |
|---------------------|-----------|----------------|
| Simple (Basic aggregations) | {{ simple_measures|length }} | {{ ((simple_measures|length / metadata.measures|length) * 100)|round(1) }}% |
| Complex (Advanced DAX) | {{ complex_measures|length }} | {{ ((complex_measures|length / metadata.measures|length) * 100)|round(1) }}% |

### DAX Function Usage

{% set all_expressions = metadata.measures|map(attribute="expression")|join(" ")|upper %}

Common DAX functions detected:
{% if "SUM(" in all_expressions %}
- `SUM()` - Basic aggregation
{% endif %}
{% if "CALCULATE(" in all_expressions %}
- `CALCULATE()` - Context modification
{% endif %}
{% if "SUMX(" in all_expressions %}
- `SUMX()` - Iterator function
{% endif %}
{% if "FILTER(" in all_expressions %}
- `FILTER()` - Table filtering
{% endif %}
{% if "RELATED(" in all_expressions %}
- `RELATED()` - Cross-table reference
{% endif %}
{% if "DIVIDE(" in all_expressions %}
- `DIVIDE()` - Safe division
{% endif %}
{% if "IF(" in all_expressions %}
- `IF()` - Conditional logic
{% endif %}
{% if "ALL(" in all_expressions %}
- `ALL()` - Remove filters
{% endif %}

{% else %}
### No Custom Measures

This model does not contain custom DAX measures. Consider adding calculated measures for:
- Key Performance Indicators (KPIs)
- Business calculations
- Ratio and percentage calculations
{% endif %}

## ‚öôÔ∏è Power Query Configuration

{% if metadata.power_query.queries %}
### ETL Pipeline Overview

| **Query** | **Type** | **Complexity** |
|-----------|----------|----------------|
{% for query in metadata.power_query.queries %}
| `{{ query.name }}` | Data Source | {% if query.steps|length > 5 %}High{% elif query.steps|length > 2 %}Medium{% else %}Low{% endif %} |
{% endfor %}

### Transformation Summary

- **Total Queries**: {{ metadata.power_query.queries|length }}
- **Average Steps per Query**: {{ ((metadata.power_query.queries|map(attribute="steps")|map("length")|sum) / (metadata.power_query.queries|length))|round(1) }}

{% if metadata.power_query.parameters %}
### Parameters

{% for param in metadata.power_query.parameters %}
- `{{ param.name }}`: {{ param.type }} ({{ param.description | default("No description") }})
{% endfor %}
{% endif %}

{% else %}
### No Power Query Transformations

This model does not contain Power Query transformations or they could not be extracted.
{% endif %}

## üîç Performance Considerations

### Model Size Analysis

{% set total_columns = 0 %}
{% for table in metadata.tables %}
  {% set total_columns = total_columns + table.columns|length %}
{% endfor %}

| **Metric** | **Value** | **Performance Impact** |
|------------|-----------|------------------------|
| Total Tables | {{ metadata.tables|length }} | {% if metadata.tables|length > 20 %}High{% elif metadata.tables|length > 10 %}Medium{% else %}Low{% endif %} |
| Total Columns | {{ total_columns }} | {% if total_columns > 200 %}High{% elif total_columns > 100 %}Medium{% else %}Low{% endif %} |
| Complex Measures | {{ complex_measures|length if complex_measures is defined else 0 }} | {% if (complex_measures|length if complex_measures is defined else 0) > 20 %}High{% elif (complex_measures|length if complex_measures is defined else 0) > 10 %}Medium{% else %}Low{% endif %} |
| Relationships | {{ metadata.relationships|length }} | {% if metadata.relationships|length > 15 %}Medium{% else %}Low{% endif %} |

### Optimization Recommendations

{% if metadata.tables|length > 15 %}
üî¥ **High Table Count**: Consider consolidating related tables or reviewing data model design
{% endif %}
{% if total_columns > 150 %}
üü° **Many Columns**: Review if all columns are necessary; consider hiding unused columns
{% endif %}
{% if (complex_measures|length if complex_measures is defined else 0) > 15 %}
üü° **Complex DAX**: Monitor performance of advanced measures, especially in large datasets
{% endif %}
{% if metadata.relationships|length == 0 %}
üî¥ **No Relationships**: Ensure proper relationships for optimal query performance
{% endif %}

## üõ†Ô∏è Maintenance Guidelines

### Development Best Practices

1. **Naming Conventions**
   - Use descriptive names for measures and columns
   - Follow consistent naming patterns
   - Avoid special characters and spaces where possible

2. **Documentation**
   - Add descriptions to measures and calculated columns
   - Document business logic and data sources
   - Maintain change logs for model updates

3. **Performance Optimization**
   - Review complex DAX measures regularly
   - Monitor refresh times and query performance
   - Consider incremental refresh for large datasets

### Version Control

- Model file size: {{ (metadata.file_info.size_bytes / (1024 * 1024))|round(2) }} MB
- Consider breaking down large models into smaller, focused models
- Use deployment pipelines for enterprise environments

## üìã Technical Checklist

- [ ] All relationships are properly configured and active
- [ ] Measures have appropriate descriptions
- [ ] Data types are optimized for performance
- [ ] Security roles are implemented (if required)
- [ ] Refresh schedule is documented
- [ ] Performance has been tested with production data volumes

---

*Technical documentation generated by PBNJ*